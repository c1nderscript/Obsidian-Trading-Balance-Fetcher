name: release-hygiene
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
jobs:
  guardrails:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Detect version + ensure CHANGELOG updated
        run: |
          set -euo pipefail
          VERSION_FILE=""
          for f in package.json pyproject.toml Cargo.toml Chart.yaml *.csproj; do
            [[ -f "$f" ]] && VERSION_FILE="$f" && break
          done
          if [[ -z "$VERSION_FILE" ]]; then
            echo "No version file found. Add one." && exit 1
          fi
          VERSION="$(grep -Eo '"version": *"[^"]+"' package.json 2>/dev/null | cut -d\" -f4 || true)"
          [[ -z "$VERSION" ]] && VERSION="$(grep -E '^version *= *' pyproject.toml 2>/dev/null | sed 's/.*= *//;s/"//g')"
          [[ -z "$VERSION" ]] && VERSION="$(grep -E '^version *= *' Cargo.toml 2>/dev/null | head -1 | sed 's/.*= *//;s/"//g')"
          [[ -z "$VERSION" ]] && VERSION="$(grep -E '<Version>.*</Version>' *.csproj 2>/dev/null | sed 's/.*<Version>\(.*\)<\/Version>.*/\1/')"
          [[ -z "$VERSION" ]] && { echo "Unable to parse version."; exit 1; }

          echo "Detected version: $VERSION"
          test -f CHANGELOG.md || { echo "Missing CHANGELOG.md"; exit 1; }
          grep -qE "^## \[?$VERSION\]?" CHANGELOG.md || { echo "CHANGELOG.md missing entry for $VERSION"; exit 1; }

          if ! echo "$VERSION" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9.-]+)?$'; then
            echo "Version is not SemVer: $VERSION"; exit 1
          fi
      - name: AGENTS drift check
        run: bash scripts/agents-verify.sh
